
optcomp_opt = %string(strings = [
  "-let ocaml_full_version=("
    ocaml_major_version ","
    ocaml_minor_version ","
    ocaml_point_version
  ")"
])

camlp4_optcomp_js = [
  "camlp4o"
  "%{optcomp_SRC_DIR}%/optcomp.cma" optcomp_opt
  "%{js_of_ocaml-camlp4_SRC_DIR}%/pa_js.cma"
]

camlp4_js = [
  "camlp4o"
  "%{js_of_ocaml-camlp4_SRC_DIR}%/pa_js.cma"
]

camlp4_optcomp = [
  "camlp4o"
  "%{optcomp_SRC_DIR}%/optcomp.cma" optcomp_opt
]

begin library "jstest"
  requires = [
    "js_of_ocaml"
  ]
  files = [
    "jstest.ml" ( pp = camlp4_js )
  ]
end

begin program "test-sodium"
  requires = [
    "jstest"
    "ocp-libsodium.js"
  ]
  files = [
    "test_sodium.ml"
  ]
  build_rules = [
    "%{test-sodium_FULL_DST_DIR}%/test-sodium.js" (
      build_target = true
      sources = %byte_exe( p = "test-sodium" )
      commands = [ {
        "js_of_ocaml"
          "--pretty"
          "--no-inline"
          "+weak.js";
          "+dynlink.js";
          "+toplevel.js";
          "+bigarray.js";
          (* "+cstruct/cstruct.js"; *)
           %byte_exe( p = "test-sodium" )
      } ]
    )
  ]
end
